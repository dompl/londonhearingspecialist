@use "sass:math";
@mixin default-row-gap() {
	row-gap: clamp(3vh, 3vw, 5vh);
}
@mixin default-column-gap() {
	column-gap: clamp(2rem, 3vw, 4rem);
}
// SCSS Function for converting px to rem
@function rem($px-value, $base-font-size: 16) {
	@return math.div($px-value, $base-font-size) + rem;
}

@mixin font($min: null, $max: null, $line: null, $width: 3vw) {
	@if $min != null and $max != null {
		font-size: clamp(rem($min), $width, rem($max));
	}
	@if $min == null {
		line-height: var(--line-height-base);
	} @else {
		line-height: $line;
	}
	@content;
}

@mixin font-size($min: null, $max: null, $line: null, $width: 3vw) {
	@if $min != null and $max != null {
		font-size: clamp(rem($min), $width, rem($max));
	}
	@if $min == null {
		line-height: var(--line-height-base);
	} @else {
		line-height: $line;
	}

	@content;
}
@mixin hover() {
	&:hover,
	&:active,
	&:focus {
		@content;
	}
}

@mixin roboto($font-weight: normal) {
	font-family: var(--font-roboto);
	@if $font-weight == normal {
		font-weight: 400;
	} @else if $font-weight == bold {
		font-weight: 700;
	}
	@content;
}
@mixin blur-overlay($color, $blur-amount) {
	position: relative;
	&:before,
	&:after {
		content: "";
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background-color: $color;
		background-attachment: fixed;
		border-radius: 30px;
		filter: blur($blur-amount);
	}
	span {
		position: relative;
		z-index: 2;
	}
}

@mixin font-styles() {
	@include font(14, 16);
}

@function clamper($min: 16, $max: 64, $screen: 3, $base-font-size: 16) {
	$n: math.div($min, $base-font-size) + rem;
	$x: math.div($max, $base-font-size) + rem;
	@return clamp(#{$n}, #{$screen}vw, #{$x});
}

@mixin form-field-reset($type: "select") {
	@if $type == "select" {
		-webkit-appearance: none;
		-moz-appearance: none;
		appearance: none;
		background-color: transparent;
		border: none;
		outline: none;
		box-sizing: border-box;
		cursor: pointer;
		&:hover {
			outline: none;
			border: none;
		}
		&::-ms-expand {
			display: none;
		}
	}
	@content;
}

@mixin shadow-box() {
	box-shadow: 0px 0px 20px 0px rgba(116, 116, 116, 0.11);
	transition: all, 300ms;
	border-radius: rem(5);
	background-size: cover;
	position: relative;
	box-sizing: border-box;
}
